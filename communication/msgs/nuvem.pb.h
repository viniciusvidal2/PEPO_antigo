// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nuvem.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_nuvem_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_nuvem_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_nuvem_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_nuvem_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nuvem_2eproto;
namespace NuvemMsgProto {
class Nuvem;
class NuvemDefaultTypeInternal;
extern NuvemDefaultTypeInternal _Nuvem_default_instance_;
class Nuvem_Ponto;
class Nuvem_PontoDefaultTypeInternal;
extern Nuvem_PontoDefaultTypeInternal _Nuvem_Ponto_default_instance_;
}  // namespace NuvemMsgProto
PROTOBUF_NAMESPACE_OPEN
template<> ::NuvemMsgProto::Nuvem* Arena::CreateMaybeMessage<::NuvemMsgProto::Nuvem>(Arena*);
template<> ::NuvemMsgProto::Nuvem_Ponto* Arena::CreateMaybeMessage<::NuvemMsgProto::Nuvem_Ponto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace NuvemMsgProto {

// ===================================================================

class Nuvem_Ponto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NuvemMsgProto.Nuvem.Ponto) */ {
 public:
  Nuvem_Ponto();
  virtual ~Nuvem_Ponto();

  Nuvem_Ponto(const Nuvem_Ponto& from);
  Nuvem_Ponto(Nuvem_Ponto&& from) noexcept
    : Nuvem_Ponto() {
    *this = ::std::move(from);
  }

  inline Nuvem_Ponto& operator=(const Nuvem_Ponto& from) {
    CopyFrom(from);
    return *this;
  }
  inline Nuvem_Ponto& operator=(Nuvem_Ponto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Nuvem_Ponto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nuvem_Ponto* internal_default_instance() {
    return reinterpret_cast<const Nuvem_Ponto*>(
               &_Nuvem_Ponto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Nuvem_Ponto& a, Nuvem_Ponto& b) {
    a.Swap(&b);
  }
  inline void Swap(Nuvem_Ponto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Nuvem_Ponto* New() const final {
    return CreateMaybeMessage<Nuvem_Ponto>(nullptr);
  }

  Nuvem_Ponto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Nuvem_Ponto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Nuvem_Ponto& from);
  void MergeFrom(const Nuvem_Ponto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nuvem_Ponto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NuvemMsgProto.Nuvem.Ponto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_nuvem_2eproto);
    return ::descriptor_table_nuvem_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kRFieldNumber = 4,
    kGFieldNumber = 5,
    kBFieldNumber = 6,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // int32 r = 4;
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 g = 5;
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 b = 6;
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NuvemMsgProto.Nuvem.Ponto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nuvem_2eproto;
};
// -------------------------------------------------------------------

class Nuvem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:NuvemMsgProto.Nuvem) */ {
 public:
  Nuvem();
  virtual ~Nuvem();

  Nuvem(const Nuvem& from);
  Nuvem(Nuvem&& from) noexcept
    : Nuvem() {
    *this = ::std::move(from);
  }

  inline Nuvem& operator=(const Nuvem& from) {
    CopyFrom(from);
    return *this;
  }
  inline Nuvem& operator=(Nuvem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Nuvem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nuvem* internal_default_instance() {
    return reinterpret_cast<const Nuvem*>(
               &_Nuvem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Nuvem& a, Nuvem& b) {
    a.Swap(&b);
  }
  inline void Swap(Nuvem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Nuvem* New() const final {
    return CreateMaybeMessage<Nuvem>(nullptr);
  }

  Nuvem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Nuvem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Nuvem& from);
  void MergeFrom(const Nuvem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nuvem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "NuvemMsgProto.Nuvem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_nuvem_2eproto);
    return ::descriptor_table_nuvem_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Nuvem_Ponto Ponto;

  // accessors -------------------------------------------------------

  enum : int {
    kPontosFieldNumber = 3,
    kNameFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
  int pontos_size() const;
  private:
  int _internal_pontos_size() const;
  public:
  void clear_pontos();
  ::NuvemMsgProto::Nuvem_Ponto* mutable_pontos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::NuvemMsgProto::Nuvem_Ponto >*
      mutable_pontos();
  private:
  const ::NuvemMsgProto::Nuvem_Ponto& _internal_pontos(int index) const;
  ::NuvemMsgProto::Nuvem_Ponto* _internal_add_pontos();
  public:
  const ::NuvemMsgProto::Nuvem_Ponto& pontos(int index) const;
  ::NuvemMsgProto::Nuvem_Ponto* add_pontos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::NuvemMsgProto::Nuvem_Ponto >&
      pontos() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:NuvemMsgProto.Nuvem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::NuvemMsgProto::Nuvem_Ponto > pontos_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_nuvem_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Nuvem_Ponto

// double x = 1;
inline void Nuvem_Ponto::clear_x() {
  x_ = 0;
}
inline double Nuvem_Ponto::_internal_x() const {
  return x_;
}
inline double Nuvem_Ponto::x() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.x)
  return _internal_x();
}
inline void Nuvem_Ponto::_internal_set_x(double value) {
  
  x_ = value;
}
inline void Nuvem_Ponto::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.x)
}

// double y = 2;
inline void Nuvem_Ponto::clear_y() {
  y_ = 0;
}
inline double Nuvem_Ponto::_internal_y() const {
  return y_;
}
inline double Nuvem_Ponto::y() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.y)
  return _internal_y();
}
inline void Nuvem_Ponto::_internal_set_y(double value) {
  
  y_ = value;
}
inline void Nuvem_Ponto::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.y)
}

// double z = 3;
inline void Nuvem_Ponto::clear_z() {
  z_ = 0;
}
inline double Nuvem_Ponto::_internal_z() const {
  return z_;
}
inline double Nuvem_Ponto::z() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.z)
  return _internal_z();
}
inline void Nuvem_Ponto::_internal_set_z(double value) {
  
  z_ = value;
}
inline void Nuvem_Ponto::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.z)
}

// int32 r = 4;
inline void Nuvem_Ponto::clear_r() {
  r_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::r() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.r)
  return _internal_r();
}
inline void Nuvem_Ponto::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  r_ = value;
}
inline void Nuvem_Ponto::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.r)
}

// int32 g = 5;
inline void Nuvem_Ponto::clear_g() {
  g_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::g() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.g)
  return _internal_g();
}
inline void Nuvem_Ponto::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  g_ = value;
}
inline void Nuvem_Ponto::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.g)
}

// int32 b = 6;
inline void Nuvem_Ponto::clear_b() {
  b_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem_Ponto::b() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.Ponto.b)
  return _internal_b();
}
inline void Nuvem_Ponto::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  b_ = value;
}
inline void Nuvem_Ponto::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.Ponto.b)
}

// -------------------------------------------------------------------

// Nuvem

// string name = 1;
inline void Nuvem::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Nuvem::name() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.name)
  return _internal_name();
}
inline void Nuvem::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.name)
}
inline std::string* Nuvem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:NuvemMsgProto.Nuvem.name)
  return _internal_mutable_name();
}
inline const std::string& Nuvem::_internal_name() const {
  return name_.GetNoArena();
}
inline void Nuvem::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Nuvem::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NuvemMsgProto.Nuvem.name)
}
inline void Nuvem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NuvemMsgProto.Nuvem.name)
}
inline void Nuvem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NuvemMsgProto.Nuvem.name)
}
inline std::string* Nuvem::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Nuvem::release_name() {
  // @@protoc_insertion_point(field_release:NuvemMsgProto.Nuvem.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Nuvem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NuvemMsgProto.Nuvem.name)
}

// int32 size = 2;
inline void Nuvem::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Nuvem::size() const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.size)
  return _internal_size();
}
inline void Nuvem::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void Nuvem::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:NuvemMsgProto.Nuvem.size)
}

// repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
inline int Nuvem::_internal_pontos_size() const {
  return pontos_.size();
}
inline int Nuvem::pontos_size() const {
  return _internal_pontos_size();
}
inline void Nuvem::clear_pontos() {
  pontos_.Clear();
}
inline ::NuvemMsgProto::Nuvem_Ponto* Nuvem::mutable_pontos(int index) {
  // @@protoc_insertion_point(field_mutable:NuvemMsgProto.Nuvem.pontos)
  return pontos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::NuvemMsgProto::Nuvem_Ponto >*
Nuvem::mutable_pontos() {
  // @@protoc_insertion_point(field_mutable_list:NuvemMsgProto.Nuvem.pontos)
  return &pontos_;
}
inline const ::NuvemMsgProto::Nuvem_Ponto& Nuvem::_internal_pontos(int index) const {
  return pontos_.Get(index);
}
inline const ::NuvemMsgProto::Nuvem_Ponto& Nuvem::pontos(int index) const {
  // @@protoc_insertion_point(field_get:NuvemMsgProto.Nuvem.pontos)
  return _internal_pontos(index);
}
inline ::NuvemMsgProto::Nuvem_Ponto* Nuvem::_internal_add_pontos() {
  return pontos_.Add();
}
inline ::NuvemMsgProto::Nuvem_Ponto* Nuvem::add_pontos() {
  // @@protoc_insertion_point(field_add:NuvemMsgProto.Nuvem.pontos)
  return _internal_add_pontos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::NuvemMsgProto::Nuvem_Ponto >&
Nuvem::pontos() const {
  // @@protoc_insertion_point(field_list:NuvemMsgProto.Nuvem.pontos)
  return pontos_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NuvemMsgProto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_nuvem_2eproto
