// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvm.proto

#ifndef PROTOBUF_nvm_2eproto__INCLUDED
#define PROTOBUF_nvm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace NVMMsgProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_nvm_2eproto();
void protobuf_AssignDesc_nvm_2eproto();
void protobuf_ShutdownFile_nvm_2eproto();

class NVM;

// ===================================================================

class NVM : public ::google::protobuf::Message {
 public:
  NVM();
  virtual ~NVM();

  NVM(const NVM& from);

  inline NVM& operator=(const NVM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NVM& default_instance();

  void Swap(NVM* other);

  // implements Message ----------------------------------------------

  NVM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NVM& from);
  void MergeFrom(const NVM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nlinhas = 1;
  inline bool has_nlinhas() const;
  inline void clear_nlinhas();
  static const int kNlinhasFieldNumber = 1;
  inline ::google::protobuf::int32 nlinhas() const;
  inline void set_nlinhas(::google::protobuf::int32 value);

  // repeated string linhas = 2;
  inline int linhas_size() const;
  inline void clear_linhas();
  static const int kLinhasFieldNumber = 2;
  inline const ::std::string& linhas(int index) const;
  inline ::std::string* mutable_linhas(int index);
  inline void set_linhas(int index, const ::std::string& value);
  inline void set_linhas(int index, const char* value);
  inline void set_linhas(int index, const char* value, size_t size);
  inline ::std::string* add_linhas();
  inline void add_linhas(const ::std::string& value);
  inline void add_linhas(const char* value);
  inline void add_linhas(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& linhas() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_linhas();

  // @@protoc_insertion_point(class_scope:NVMMsgProto.NVM)
 private:
  inline void set_has_nlinhas();
  inline void clear_has_nlinhas();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> linhas_;
  ::google::protobuf::int32 nlinhas_;
  friend void  protobuf_AddDesc_nvm_2eproto();
  friend void protobuf_AssignDesc_nvm_2eproto();
  friend void protobuf_ShutdownFile_nvm_2eproto();

  void InitAsDefaultInstance();
  static NVM* default_instance_;
};
// ===================================================================


// ===================================================================

// NVM

// required int32 nlinhas = 1;
inline bool NVM::has_nlinhas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NVM::set_has_nlinhas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NVM::clear_has_nlinhas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NVM::clear_nlinhas() {
  nlinhas_ = 0;
  clear_has_nlinhas();
}
inline ::google::protobuf::int32 NVM::nlinhas() const {
  // @@protoc_insertion_point(field_get:NVMMsgProto.NVM.nlinhas)
  return nlinhas_;
}
inline void NVM::set_nlinhas(::google::protobuf::int32 value) {
  set_has_nlinhas();
  nlinhas_ = value;
  // @@protoc_insertion_point(field_set:NVMMsgProto.NVM.nlinhas)
}

// repeated string linhas = 2;
inline int NVM::linhas_size() const {
  return linhas_.size();
}
inline void NVM::clear_linhas() {
  linhas_.Clear();
}
inline const ::std::string& NVM::linhas(int index) const {
  // @@protoc_insertion_point(field_get:NVMMsgProto.NVM.linhas)
  return linhas_.Get(index);
}
inline ::std::string* NVM::mutable_linhas(int index) {
  // @@protoc_insertion_point(field_mutable:NVMMsgProto.NVM.linhas)
  return linhas_.Mutable(index);
}
inline void NVM::set_linhas(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NVMMsgProto.NVM.linhas)
  linhas_.Mutable(index)->assign(value);
}
inline void NVM::set_linhas(int index, const char* value) {
  linhas_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NVMMsgProto.NVM.linhas)
}
inline void NVM::set_linhas(int index, const char* value, size_t size) {
  linhas_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NVMMsgProto.NVM.linhas)
}
inline ::std::string* NVM::add_linhas() {
  return linhas_.Add();
}
inline void NVM::add_linhas(const ::std::string& value) {
  linhas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NVMMsgProto.NVM.linhas)
}
inline void NVM::add_linhas(const char* value) {
  linhas_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NVMMsgProto.NVM.linhas)
}
inline void NVM::add_linhas(const char* value, size_t size) {
  linhas_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NVMMsgProto.NVM.linhas)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NVM::linhas() const {
  // @@protoc_insertion_point(field_list:NVMMsgProto.NVM.linhas)
  return linhas_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NVM::mutable_linhas() {
  // @@protoc_insertion_point(field_mutable_list:NVMMsgProto.NVM.linhas)
  return &linhas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NVMMsgProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nvm_2eproto__INCLUDED
