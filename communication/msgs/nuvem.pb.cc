// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nuvem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nuvem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NuvemMsgProto {

namespace {

const ::google::protobuf::Descriptor* Nuvem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Nuvem_reflection_ = NULL;
const ::google::protobuf::Descriptor* Nuvem_Ponto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Nuvem_Ponto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nuvem_2eproto() {
  protobuf_AddDesc_nuvem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nuvem.proto");
  GOOGLE_CHECK(file != NULL);
  Nuvem_descriptor_ = file->message_type(0);
  static const int Nuvem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem, pontos_),
  };
  Nuvem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Nuvem_descriptor_,
      Nuvem::default_instance_,
      Nuvem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Nuvem));
  Nuvem_Ponto_descriptor_ = Nuvem_descriptor_->nested_type(0);
  static const int Nuvem_Ponto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, r_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, b_),
  };
  Nuvem_Ponto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Nuvem_Ponto_descriptor_,
      Nuvem_Ponto::default_instance_,
      Nuvem_Ponto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Nuvem_Ponto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Nuvem_Ponto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nuvem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Nuvem_descriptor_, &Nuvem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Nuvem_Ponto_descriptor_, &Nuvem_Ponto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nuvem_2eproto() {
  delete Nuvem::default_instance_;
  delete Nuvem_reflection_;
  delete Nuvem_Ponto::default_instance_;
  delete Nuvem_Ponto_reflection_;
}

void protobuf_AddDesc_nuvem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013nuvem.proto\022\rNuvemMsgProto\"\232\001\n\005Nuvem\022\014"
    "\n\004name\030\001 \002(\t\022\014\n\004size\030\002 \002(\005\022*\n\006pontos\030\003 \003"
    "(\0132\032.NuvemMsgProto.Nuvem.Ponto\032I\n\005Ponto\022"
    "\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\t\n\001z\030\003 \002(\001\022\t\n\001r\030\004 "
    "\002(\005\022\t\n\001g\030\005 \002(\005\022\t\n\001b\030\006 \002(\005", 185);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nuvem.proto", &protobuf_RegisterTypes);
  Nuvem::default_instance_ = new Nuvem();
  Nuvem_Ponto::default_instance_ = new Nuvem_Ponto();
  Nuvem::default_instance_->InitAsDefaultInstance();
  Nuvem_Ponto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nuvem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nuvem_2eproto {
  StaticDescriptorInitializer_nuvem_2eproto() {
    protobuf_AddDesc_nuvem_2eproto();
  }
} static_descriptor_initializer_nuvem_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Nuvem_Ponto::kXFieldNumber;
const int Nuvem_Ponto::kYFieldNumber;
const int Nuvem_Ponto::kZFieldNumber;
const int Nuvem_Ponto::kRFieldNumber;
const int Nuvem_Ponto::kGFieldNumber;
const int Nuvem_Ponto::kBFieldNumber;
#endif  // !_MSC_VER

Nuvem_Ponto::Nuvem_Ponto()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NuvemMsgProto.Nuvem.Ponto)
}

void Nuvem_Ponto::InitAsDefaultInstance() {
}

Nuvem_Ponto::Nuvem_Ponto(const Nuvem_Ponto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NuvemMsgProto.Nuvem.Ponto)
}

void Nuvem_Ponto::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  r_ = 0;
  g_ = 0;
  b_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Nuvem_Ponto::~Nuvem_Ponto() {
  // @@protoc_insertion_point(destructor:NuvemMsgProto.Nuvem.Ponto)
  SharedDtor();
}

void Nuvem_Ponto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Nuvem_Ponto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Nuvem_Ponto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Nuvem_Ponto_descriptor_;
}

const Nuvem_Ponto& Nuvem_Ponto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nuvem_2eproto();
  return *default_instance_;
}

Nuvem_Ponto* Nuvem_Ponto::default_instance_ = NULL;

Nuvem_Ponto* Nuvem_Ponto::New() const {
  return new Nuvem_Ponto;
}

void Nuvem_Ponto::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Nuvem_Ponto*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(x_, b_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Nuvem_Ponto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NuvemMsgProto.Nuvem.Ponto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // required double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_r;
        break;
      }

      // required int32 r = 4;
      case 4: {
        if (tag == 32) {
         parse_r:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
          set_has_r();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_g;
        break;
      }

      // required int32 g = 5;
      case 5: {
        if (tag == 40) {
         parse_g:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &g_)));
          set_has_g();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_b;
        break;
      }

      // required int32 b = 6;
      case 6: {
        if (tag == 48) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NuvemMsgProto.Nuvem.Ponto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NuvemMsgProto.Nuvem.Ponto)
  return false;
#undef DO_
}

void Nuvem_Ponto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NuvemMsgProto.Nuvem.Ponto)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // required int32 r = 4;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->r(), output);
  }

  // required int32 g = 5;
  if (has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->g(), output);
  }

  // required int32 b = 6;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->b(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NuvemMsgProto.Nuvem.Ponto)
}

::google::protobuf::uint8* Nuvem_Ponto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NuvemMsgProto.Nuvem.Ponto)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // required int32 r = 4;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->r(), target);
  }

  // required int32 g = 5;
  if (has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->g(), target);
  }

  // required int32 b = 6;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->b(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NuvemMsgProto.Nuvem.Ponto)
  return target;
}

int Nuvem_Ponto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 1;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 2;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double z = 3;
    if (has_z()) {
      total_size += 1 + 8;
    }

    // required int32 r = 4;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->r());
    }

    // required int32 g = 5;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->g());
    }

    // required int32 b = 6;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Nuvem_Ponto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Nuvem_Ponto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Nuvem_Ponto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Nuvem_Ponto::MergeFrom(const Nuvem_Ponto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_r()) {
      set_r(from.r());
    }
    if (from.has_g()) {
      set_g(from.g());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Nuvem_Ponto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nuvem_Ponto::CopyFrom(const Nuvem_Ponto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nuvem_Ponto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void Nuvem_Ponto::Swap(Nuvem_Ponto* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(r_, other->r_);
    std::swap(g_, other->g_);
    std::swap(b_, other->b_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Nuvem_Ponto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Nuvem_Ponto_descriptor_;
  metadata.reflection = Nuvem_Ponto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Nuvem::kNameFieldNumber;
const int Nuvem::kSizeFieldNumber;
const int Nuvem::kPontosFieldNumber;
#endif  // !_MSC_VER

Nuvem::Nuvem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NuvemMsgProto.Nuvem)
}

void Nuvem::InitAsDefaultInstance() {
}

Nuvem::Nuvem(const Nuvem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NuvemMsgProto.Nuvem)
}

void Nuvem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Nuvem::~Nuvem() {
  // @@protoc_insertion_point(destructor:NuvemMsgProto.Nuvem)
  SharedDtor();
}

void Nuvem::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Nuvem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Nuvem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Nuvem_descriptor_;
}

const Nuvem& Nuvem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nuvem_2eproto();
  return *default_instance_;
}

Nuvem* Nuvem::default_instance_ = NULL;

Nuvem* Nuvem::New() const {
  return new Nuvem;
}

void Nuvem::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    size_ = 0;
  }
  pontos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Nuvem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NuvemMsgProto.Nuvem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // required int32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pontos;
        break;
      }

      // repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
      case 3: {
        if (tag == 26) {
         parse_pontos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pontos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pontos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NuvemMsgProto.Nuvem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NuvemMsgProto.Nuvem)
  return false;
#undef DO_
}

void Nuvem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NuvemMsgProto.Nuvem)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
  for (int i = 0; i < this->pontos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pontos(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NuvemMsgProto.Nuvem)
}

::google::protobuf::uint8* Nuvem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NuvemMsgProto.Nuvem)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
  for (int i = 0; i < this->pontos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pontos(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NuvemMsgProto.Nuvem)
  return target;
}

int Nuvem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 size = 2;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  // repeated .NuvemMsgProto.Nuvem.Ponto pontos = 3;
  total_size += 1 * this->pontos_size();
  for (int i = 0; i < this->pontos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pontos(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Nuvem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Nuvem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Nuvem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Nuvem::MergeFrom(const Nuvem& from) {
  GOOGLE_CHECK_NE(&from, this);
  pontos_.MergeFrom(from.pontos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Nuvem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nuvem::CopyFrom(const Nuvem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nuvem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->pontos())) return false;
  return true;
}

void Nuvem::Swap(Nuvem* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(size_, other->size_);
    pontos_.Swap(&other->pontos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Nuvem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Nuvem_descriptor_;
  metadata.reflection = Nuvem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace NuvemMsgProto

// @@protoc_insertion_point(global_scope)
