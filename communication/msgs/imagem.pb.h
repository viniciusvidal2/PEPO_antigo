// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imagem.proto

#ifndef PROTOBUF_imagem_2eproto__INCLUDED
#define PROTOBUF_imagem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ImagemMsgProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_imagem_2eproto();
void protobuf_AssignDesc_imagem_2eproto();
void protobuf_ShutdownFile_imagem_2eproto();

class Imagem;
class Imagem_Pixel;

// ===================================================================

class Imagem_Pixel : public ::google::protobuf::Message {
 public:
  Imagem_Pixel();
  virtual ~Imagem_Pixel();

  Imagem_Pixel(const Imagem_Pixel& from);

  inline Imagem_Pixel& operator=(const Imagem_Pixel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imagem_Pixel& default_instance();

  void Swap(Imagem_Pixel* other);

  // implements Message ----------------------------------------------

  Imagem_Pixel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Imagem_Pixel& from);
  void MergeFrom(const Imagem_Pixel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 r = 1;
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 1;
  inline ::google::protobuf::int32 r() const;
  inline void set_r(::google::protobuf::int32 value);

  // required int32 g = 2;
  inline bool has_g() const;
  inline void clear_g();
  static const int kGFieldNumber = 2;
  inline ::google::protobuf::int32 g() const;
  inline void set_g(::google::protobuf::int32 value);

  // required int32 b = 3;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 3;
  inline ::google::protobuf::int32 b() const;
  inline void set_b(::google::protobuf::int32 value);

  // required int32 u = 4;
  inline bool has_u() const;
  inline void clear_u();
  static const int kUFieldNumber = 4;
  inline ::google::protobuf::int32 u() const;
  inline void set_u(::google::protobuf::int32 value);

  // required int32 v = 5;
  inline bool has_v() const;
  inline void clear_v();
  static const int kVFieldNumber = 5;
  inline ::google::protobuf::int32 v() const;
  inline void set_v(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem.Pixel)
 private:
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_g();
  inline void clear_has_g();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_u();
  inline void clear_has_u();
  inline void set_has_v();
  inline void clear_has_v();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 g_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 u_;
  ::google::protobuf::int32 v_;
  friend void  protobuf_AddDesc_imagem_2eproto();
  friend void protobuf_AssignDesc_imagem_2eproto();
  friend void protobuf_ShutdownFile_imagem_2eproto();

  void InitAsDefaultInstance();
  static Imagem_Pixel* default_instance_;
};
// -------------------------------------------------------------------

class Imagem : public ::google::protobuf::Message {
 public:
  Imagem();
  virtual ~Imagem();

  Imagem(const Imagem& from);

  inline Imagem& operator=(const Imagem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imagem& default_instance();

  void Swap(Imagem* other);

  // implements Message ----------------------------------------------

  Imagem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Imagem& from);
  void MergeFrom(const Imagem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Imagem_Pixel Pixel;

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // required int32 width = 3;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 3;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
  inline int pixels_size() const;
  inline void clear_pixels();
  static const int kPixelsFieldNumber = 4;
  inline const ::ImagemMsgProto::Imagem_Pixel& pixels(int index) const;
  inline ::ImagemMsgProto::Imagem_Pixel* mutable_pixels(int index);
  inline ::ImagemMsgProto::Imagem_Pixel* add_pixels();
  inline const ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
      pixels() const;
  inline ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
      mutable_pixels();

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_width();
  inline void clear_has_width();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel > pixels_;
  friend void  protobuf_AddDesc_imagem_2eproto();
  friend void protobuf_AssignDesc_imagem_2eproto();
  friend void protobuf_ShutdownFile_imagem_2eproto();

  void InitAsDefaultInstance();
  static Imagem* default_instance_;
};
// ===================================================================


// ===================================================================

// Imagem_Pixel

// required int32 r = 1;
inline bool Imagem_Pixel::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imagem_Pixel::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imagem_Pixel::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imagem_Pixel::clear_r() {
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 Imagem_Pixel::r() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.r)
  return r_;
}
inline void Imagem_Pixel::set_r(::google::protobuf::int32 value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.r)
}

// required int32 g = 2;
inline bool Imagem_Pixel::has_g() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imagem_Pixel::set_has_g() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imagem_Pixel::clear_has_g() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imagem_Pixel::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline ::google::protobuf::int32 Imagem_Pixel::g() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.g)
  return g_;
}
inline void Imagem_Pixel::set_g(::google::protobuf::int32 value) {
  set_has_g();
  g_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.g)
}

// required int32 b = 3;
inline bool Imagem_Pixel::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Imagem_Pixel::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Imagem_Pixel::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Imagem_Pixel::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 Imagem_Pixel::b() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.b)
  return b_;
}
inline void Imagem_Pixel::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.b)
}

// required int32 u = 4;
inline bool Imagem_Pixel::has_u() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Imagem_Pixel::set_has_u() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Imagem_Pixel::clear_has_u() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Imagem_Pixel::clear_u() {
  u_ = 0;
  clear_has_u();
}
inline ::google::protobuf::int32 Imagem_Pixel::u() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.u)
  return u_;
}
inline void Imagem_Pixel::set_u(::google::protobuf::int32 value) {
  set_has_u();
  u_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.u)
}

// required int32 v = 5;
inline bool Imagem_Pixel::has_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Imagem_Pixel::set_has_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Imagem_Pixel::clear_has_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Imagem_Pixel::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 Imagem_Pixel::v() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.v)
  return v_;
}
inline void Imagem_Pixel::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.v)
}

// -------------------------------------------------------------------

// Imagem

// required string name = 1;
inline bool Imagem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imagem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imagem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imagem::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Imagem::name() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.name)
  return *name_;
}
inline void Imagem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.name)
}
inline void Imagem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ImagemMsgProto.Imagem.name)
}
inline void Imagem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ImagemMsgProto.Imagem.name)
}
inline ::std::string* Imagem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.name)
  return name_;
}
inline ::std::string* Imagem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Imagem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ImagemMsgProto.Imagem.name)
}

// required int32 height = 2;
inline bool Imagem::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imagem::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imagem::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imagem::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Imagem::height() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.height)
  return height_;
}
inline void Imagem::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.height)
}

// required int32 width = 3;
inline bool Imagem::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Imagem::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Imagem::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Imagem::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Imagem::width() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.width)
  return width_;
}
inline void Imagem::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.width)
}

// repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
inline int Imagem::pixels_size() const {
  return pixels_.size();
}
inline void Imagem::clear_pixels() {
  pixels_.Clear();
}
inline const ::ImagemMsgProto::Imagem_Pixel& Imagem::pixels(int index) const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.pixels)
  return pixels_.Get(index);
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::mutable_pixels(int index) {
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.pixels)
  return pixels_.Mutable(index);
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::add_pixels() {
  // @@protoc_insertion_point(field_add:ImagemMsgProto.Imagem.pixels)
  return pixels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
Imagem::pixels() const {
  // @@protoc_insertion_point(field_list:ImagemMsgProto.Imagem.pixels)
  return pixels_;
}
inline ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
Imagem::mutable_pixels() {
  // @@protoc_insertion_point(field_mutable_list:ImagemMsgProto.Imagem.pixels)
  return &pixels_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ImagemMsgProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_imagem_2eproto__INCLUDED
