// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imagem.proto

#ifndef PROTOBUF_imagem_2eproto__INCLUDED
#define PROTOBUF_imagem_2eproto__INCLUDED
#define PROTOBUF_USE_DLLS
#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ImagemMsgProto {
class Imagem;
class ImagemDefaultTypeInternal;
extern ImagemDefaultTypeInternal _Imagem_default_instance_;
class Imagem_Pixel;
class Imagem_PixelDefaultTypeInternal;
extern Imagem_PixelDefaultTypeInternal _Imagem_Pixel_default_instance_;
}  // namespace ImagemMsgProto

namespace ImagemMsgProto {

namespace protobuf_imagem_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_imagem_2eproto

// ===================================================================

class Imagem_Pixel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImagemMsgProto.Imagem.Pixel) */ {
 public:
  Imagem_Pixel();
  virtual ~Imagem_Pixel();

  Imagem_Pixel(const Imagem_Pixel& from);

  inline Imagem_Pixel& operator=(const Imagem_Pixel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imagem_Pixel& default_instance();

  static inline const Imagem_Pixel* internal_default_instance() {
    return reinterpret_cast<const Imagem_Pixel*>(
               &_Imagem_Pixel_default_instance_);
  }

  void Swap(Imagem_Pixel* other);

  // implements Message ----------------------------------------------

  inline Imagem_Pixel* New() const PROTOBUF_FINAL { return New(NULL); }

  Imagem_Pixel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Imagem_Pixel& from);
  void MergeFrom(const Imagem_Pixel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Imagem_Pixel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 r = 1;
  bool has_r() const;
  void clear_r();
  static const int kRFieldNumber = 1;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // required int32 g = 2;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 2;
  ::google::protobuf::int32 g() const;
  void set_g(::google::protobuf::int32 value);

  // required int32 b = 3;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 3;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // required int32 u = 4;
  bool has_u() const;
  void clear_u();
  static const int kUFieldNumber = 4;
  ::google::protobuf::int32 u() const;
  void set_u(::google::protobuf::int32 value);

  // required int32 v = 5;
  bool has_v() const;
  void clear_v();
  static const int kVFieldNumber = 5;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem.Pixel)
 private:
  void set_has_r();
  void clear_has_r();
  void set_has_g();
  void clear_has_g();
  void set_has_b();
  void clear_has_b();
  void set_has_u();
  void clear_has_u();
  void set_has_v();
  void clear_has_v();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 g_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 u_;
  ::google::protobuf::int32 v_;
  friend struct  protobuf_imagem_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Imagem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImagemMsgProto.Imagem) */ {
 public:
  Imagem();
  virtual ~Imagem();

  Imagem(const Imagem& from);

  inline Imagem& operator=(const Imagem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imagem& default_instance();

  static inline const Imagem* internal_default_instance() {
    return reinterpret_cast<const Imagem*>(
               &_Imagem_default_instance_);
  }

  void Swap(Imagem* other);

  // implements Message ----------------------------------------------

  inline Imagem* New() const PROTOBUF_FINAL { return New(NULL); }

  Imagem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Imagem& from);
  void MergeFrom(const Imagem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Imagem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Imagem_Pixel Pixel;

  // accessors -------------------------------------------------------

  // repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
  int pixels_size() const;
  void clear_pixels();
  static const int kPixelsFieldNumber = 4;
  const ::ImagemMsgProto::Imagem_Pixel& pixels(int index) const;
  ::ImagemMsgProto::Imagem_Pixel* mutable_pixels(int index);
  ::ImagemMsgProto::Imagem_Pixel* add_pixels();
  ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
      mutable_pixels();
  const ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
      pixels() const;

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // required int32 width = 3;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_height();
  void clear_has_height();
  void set_has_width();
  void clear_has_width();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel > pixels_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  friend struct  protobuf_imagem_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Imagem_Pixel

// required int32 r = 1;
inline bool Imagem_Pixel::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imagem_Pixel::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imagem_Pixel::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imagem_Pixel::clear_r() {
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 Imagem_Pixel::r() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.r)
  return r_;
}
inline void Imagem_Pixel::set_r(::google::protobuf::int32 value) {
  set_has_r();
  r_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.r)
}

// required int32 g = 2;
inline bool Imagem_Pixel::has_g() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imagem_Pixel::set_has_g() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imagem_Pixel::clear_has_g() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imagem_Pixel::clear_g() {
  g_ = 0;
  clear_has_g();
}
inline ::google::protobuf::int32 Imagem_Pixel::g() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.g)
  return g_;
}
inline void Imagem_Pixel::set_g(::google::protobuf::int32 value) {
  set_has_g();
  g_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.g)
}

// required int32 b = 3;
inline bool Imagem_Pixel::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Imagem_Pixel::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Imagem_Pixel::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Imagem_Pixel::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 Imagem_Pixel::b() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.b)
  return b_;
}
inline void Imagem_Pixel::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.b)
}

// required int32 u = 4;
inline bool Imagem_Pixel::has_u() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Imagem_Pixel::set_has_u() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Imagem_Pixel::clear_has_u() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Imagem_Pixel::clear_u() {
  u_ = 0;
  clear_has_u();
}
inline ::google::protobuf::int32 Imagem_Pixel::u() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.u)
  return u_;
}
inline void Imagem_Pixel::set_u(::google::protobuf::int32 value) {
  set_has_u();
  u_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.u)
}

// required int32 v = 5;
inline bool Imagem_Pixel::has_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Imagem_Pixel::set_has_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Imagem_Pixel::clear_has_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Imagem_Pixel::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 Imagem_Pixel::v() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.v)
  return v_;
}
inline void Imagem_Pixel::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.v)
}

// -------------------------------------------------------------------

// Imagem

// required string name = 1;
inline bool Imagem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imagem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imagem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imagem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Imagem::name() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.name)
  return name_.GetNoArena();
}
inline void Imagem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.name)
}
#if LANG_CXX11
inline void Imagem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ImagemMsgProto.Imagem.name)
}
#endif
inline void Imagem::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImagemMsgProto.Imagem.name)
}
inline void Imagem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImagemMsgProto.Imagem.name)
}
inline ::std::string* Imagem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Imagem::release_name() {
  // @@protoc_insertion_point(field_release:ImagemMsgProto.Imagem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Imagem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ImagemMsgProto.Imagem.name)
}

// required int32 height = 2;
inline bool Imagem::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imagem::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imagem::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imagem::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 Imagem::height() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.height)
  return height_;
}
inline void Imagem::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.height)
}

// required int32 width = 3;
inline bool Imagem::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Imagem::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Imagem::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Imagem::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 Imagem::width() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.width)
  return width_;
}
inline void Imagem::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.width)
}

// repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
inline int Imagem::pixels_size() const {
  return pixels_.size();
}
inline void Imagem::clear_pixels() {
  pixels_.Clear();
}
inline const ::ImagemMsgProto::Imagem_Pixel& Imagem::pixels(int index) const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.pixels)
  return pixels_.Get(index);
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::mutable_pixels(int index) {
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.pixels)
  return pixels_.Mutable(index);
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::add_pixels() {
  // @@protoc_insertion_point(field_add:ImagemMsgProto.Imagem.pixels)
  return pixels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
Imagem::mutable_pixels() {
  // @@protoc_insertion_point(field_mutable_list:ImagemMsgProto.Imagem.pixels)
  return &pixels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
Imagem::pixels() const {
  // @@protoc_insertion_point(field_list:ImagemMsgProto.Imagem.pixels)
  return pixels_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ImagemMsgProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_imagem_2eproto__INCLUDED
