// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imagem.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_imagem_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_imagem_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_imagem_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_imagem_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_imagem_2eproto;
namespace ImagemMsgProto {
class Imagem;
class ImagemDefaultTypeInternal;
extern ImagemDefaultTypeInternal _Imagem_default_instance_;
class Imagem_Pixel;
class Imagem_PixelDefaultTypeInternal;
extern Imagem_PixelDefaultTypeInternal _Imagem_Pixel_default_instance_;
}  // namespace ImagemMsgProto
PROTOBUF_NAMESPACE_OPEN
template<> ::ImagemMsgProto::Imagem* Arena::CreateMaybeMessage<::ImagemMsgProto::Imagem>(Arena*);
template<> ::ImagemMsgProto::Imagem_Pixel* Arena::CreateMaybeMessage<::ImagemMsgProto::Imagem_Pixel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ImagemMsgProto {

// ===================================================================

class Imagem_Pixel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ImagemMsgProto.Imagem.Pixel) */ {
 public:
  Imagem_Pixel();
  virtual ~Imagem_Pixel();

  Imagem_Pixel(const Imagem_Pixel& from);
  Imagem_Pixel(Imagem_Pixel&& from) noexcept
    : Imagem_Pixel() {
    *this = ::std::move(from);
  }

  inline Imagem_Pixel& operator=(const Imagem_Pixel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Imagem_Pixel& operator=(Imagem_Pixel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Imagem_Pixel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Imagem_Pixel* internal_default_instance() {
    return reinterpret_cast<const Imagem_Pixel*>(
               &_Imagem_Pixel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Imagem_Pixel& a, Imagem_Pixel& b) {
    a.Swap(&b);
  }
  inline void Swap(Imagem_Pixel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Imagem_Pixel* New() const final {
    return CreateMaybeMessage<Imagem_Pixel>(nullptr);
  }

  Imagem_Pixel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Imagem_Pixel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Imagem_Pixel& from);
  void MergeFrom(const Imagem_Pixel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Imagem_Pixel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ImagemMsgProto.Imagem.Pixel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_imagem_2eproto);
    return ::descriptor_table_imagem_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRFieldNumber = 1,
    kGFieldNumber = 2,
    kBFieldNumber = 3,
    kUFieldNumber = 4,
    kVFieldNumber = 5,
  };
  // int32 r = 1;
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 g = 2;
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 b = 3;
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 u = 4;
  void clear_u();
  ::PROTOBUF_NAMESPACE_ID::int32 u() const;
  void set_u(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_u() const;
  void _internal_set_u(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 v = 5;
  void clear_v();
  ::PROTOBUF_NAMESPACE_ID::int32 v() const;
  void set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_v() const;
  void _internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem.Pixel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  ::PROTOBUF_NAMESPACE_ID::int32 u_;
  ::PROTOBUF_NAMESPACE_ID::int32 v_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_imagem_2eproto;
};
// -------------------------------------------------------------------

class Imagem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ImagemMsgProto.Imagem) */ {
 public:
  Imagem();
  virtual ~Imagem();

  Imagem(const Imagem& from);
  Imagem(Imagem&& from) noexcept
    : Imagem() {
    *this = ::std::move(from);
  }

  inline Imagem& operator=(const Imagem& from) {
    CopyFrom(from);
    return *this;
  }
  inline Imagem& operator=(Imagem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Imagem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Imagem* internal_default_instance() {
    return reinterpret_cast<const Imagem*>(
               &_Imagem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Imagem& a, Imagem& b) {
    a.Swap(&b);
  }
  inline void Swap(Imagem* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Imagem* New() const final {
    return CreateMaybeMessage<Imagem>(nullptr);
  }

  Imagem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Imagem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Imagem& from);
  void MergeFrom(const Imagem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Imagem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ImagemMsgProto.Imagem";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_imagem_2eproto);
    return ::descriptor_table_imagem_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Imagem_Pixel Pixel;

  // accessors -------------------------------------------------------

  enum : int {
    kPixelsFieldNumber = 4,
    kNameFieldNumber = 1,
    kHeightFieldNumber = 2,
    kWidthFieldNumber = 3,
  };
  // repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
  int pixels_size() const;
  private:
  int _internal_pixels_size() const;
  public:
  void clear_pixels();
  ::ImagemMsgProto::Imagem_Pixel* mutable_pixels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
      mutable_pixels();
  private:
  const ::ImagemMsgProto::Imagem_Pixel& _internal_pixels(int index) const;
  ::ImagemMsgProto::Imagem_Pixel* _internal_add_pixels();
  public:
  const ::ImagemMsgProto::Imagem_Pixel& pixels(int index) const;
  ::ImagemMsgProto::Imagem_Pixel* add_pixels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
      pixels() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 height = 2;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::int32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 width = 3;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::int32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ImagemMsgProto.Imagem)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel > pixels_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 height_;
  ::PROTOBUF_NAMESPACE_ID::int32 width_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_imagem_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Imagem_Pixel

// int32 r = 1;
inline void Imagem_Pixel::clear_r() {
  r_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::r() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.r)
  return _internal_r();
}
inline void Imagem_Pixel::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  r_ = value;
}
inline void Imagem_Pixel::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.r)
}

// int32 g = 2;
inline void Imagem_Pixel::clear_g() {
  g_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::g() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.g)
  return _internal_g();
}
inline void Imagem_Pixel::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  g_ = value;
}
inline void Imagem_Pixel::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.g)
}

// int32 b = 3;
inline void Imagem_Pixel::clear_b() {
  b_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::b() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.b)
  return _internal_b();
}
inline void Imagem_Pixel::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  b_ = value;
}
inline void Imagem_Pixel::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.b)
}

// int32 u = 4;
inline void Imagem_Pixel::clear_u() {
  u_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::_internal_u() const {
  return u_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::u() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.u)
  return _internal_u();
}
inline void Imagem_Pixel::_internal_set_u(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  u_ = value;
}
inline void Imagem_Pixel::set_u(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_u(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.u)
}

// int32 v = 5;
inline void Imagem_Pixel::clear_v() {
  v_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::_internal_v() const {
  return v_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem_Pixel::v() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.Pixel.v)
  return _internal_v();
}
inline void Imagem_Pixel::_internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  v_ = value;
}
inline void Imagem_Pixel::set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_v(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.Pixel.v)
}

// -------------------------------------------------------------------

// Imagem

// string name = 1;
inline void Imagem::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Imagem::name() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.name)
  return _internal_name();
}
inline void Imagem::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.name)
}
inline std::string* Imagem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.name)
  return _internal_mutable_name();
}
inline const std::string& Imagem::_internal_name() const {
  return name_.GetNoArena();
}
inline void Imagem::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Imagem::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ImagemMsgProto.Imagem.name)
}
inline void Imagem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImagemMsgProto.Imagem.name)
}
inline void Imagem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImagemMsgProto.Imagem.name)
}
inline std::string* Imagem::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Imagem::release_name() {
  // @@protoc_insertion_point(field_release:ImagemMsgProto.Imagem.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Imagem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ImagemMsgProto.Imagem.name)
}

// int32 height = 2;
inline void Imagem::clear_height() {
  height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem::height() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.height)
  return _internal_height();
}
inline void Imagem::_internal_set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  height_ = value;
}
inline void Imagem::set_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.height)
}

// int32 width = 3;
inline void Imagem::clear_width() {
  width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Imagem::width() const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.width)
  return _internal_width();
}
inline void Imagem::_internal_set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  width_ = value;
}
inline void Imagem::set_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:ImagemMsgProto.Imagem.width)
}

// repeated .ImagemMsgProto.Imagem.Pixel pixels = 4;
inline int Imagem::_internal_pixels_size() const {
  return pixels_.size();
}
inline int Imagem::pixels_size() const {
  return _internal_pixels_size();
}
inline void Imagem::clear_pixels() {
  pixels_.Clear();
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::mutable_pixels(int index) {
  // @@protoc_insertion_point(field_mutable:ImagemMsgProto.Imagem.pixels)
  return pixels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >*
Imagem::mutable_pixels() {
  // @@protoc_insertion_point(field_mutable_list:ImagemMsgProto.Imagem.pixels)
  return &pixels_;
}
inline const ::ImagemMsgProto::Imagem_Pixel& Imagem::_internal_pixels(int index) const {
  return pixels_.Get(index);
}
inline const ::ImagemMsgProto::Imagem_Pixel& Imagem::pixels(int index) const {
  // @@protoc_insertion_point(field_get:ImagemMsgProto.Imagem.pixels)
  return _internal_pixels(index);
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::_internal_add_pixels() {
  return pixels_.Add();
}
inline ::ImagemMsgProto::Imagem_Pixel* Imagem::add_pixels() {
  // @@protoc_insertion_point(field_add:ImagemMsgProto.Imagem.pixels)
  return _internal_add_pixels();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ImagemMsgProto::Imagem_Pixel >&
Imagem::pixels() const {
  // @@protoc_insertion_point(field_list:ImagemMsgProto.Imagem.pixels)
  return pixels_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ImagemMsgProto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_imagem_2eproto
